"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./hooks/useChatStream.ts":
/*!********************************!*\
  !*** ./hooks/useChatStream.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useChatStream: function() { return /* binding */ useChatStream; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/utils/api */ \"./utils/api.ts\");\n\n\nconst useChatStream = function() {\n    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    const [messages, setMessages] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [isStreaming, setIsStreaming] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const currentStreamRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const addMessage = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((message)=>{\n        setMessages((prev)=>[\n                ...prev,\n                message\n            ]);\n    }, []);\n    const updateLastMessage = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((content)=>{\n        setMessages((prev)=>{\n            const newMessages = [\n                ...prev\n            ];\n            const lastMessage = newMessages[newMessages.length - 1];\n            if (lastMessage && lastMessage.role === \"assistant\") {\n                lastMessage.content = content;\n            }\n            return newMessages;\n        });\n    }, []);\n    const appendToLastMessage = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((chunk)=>{\n        setMessages((prev)=>{\n            const newMessages = [\n                ...prev\n            ];\n            const lastMessage = newMessages[newMessages.length - 1];\n            if (lastMessage && lastMessage.role === \"assistant\") {\n                lastMessage.content += chunk;\n            }\n            return newMessages;\n        });\n    }, []);\n    const clearMessages = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        setMessages([]);\n        setError(null);\n    }, []);\n    const stopStreaming = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        if (currentStreamRef.current) {\n            currentStreamRef.current.cancel();\n            currentStreamRef.current = null;\n        }\n        setIsStreaming(false);\n        setIsLoading(false);\n    }, []);\n    const handleStreamResponse = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (streamPromise, userMessage)=>{\n        setIsLoading(true);\n        setIsStreaming(true);\n        setError(null);\n        // Add user message\n        addMessage({\n            role: \"user\",\n            content: userMessage,\n            timestamp: Date.now()\n        });\n        // Add initial empty assistant message\n        addMessage({\n            role: \"assistant\",\n            content: \"\",\n            timestamp: Date.now()\n        });\n        try {\n            const response = await streamPromise;\n            if (typeof response === \"string\") {\n                var _options_onComplete;\n                // Non-streaming response\n                updateLastMessage(response);\n                (_options_onComplete = options.onComplete) === null || _options_onComplete === void 0 ? void 0 : _options_onComplete.call(options);\n            } else {\n                // Streaming response\n                const reader = response.getReader();\n                currentStreamRef.current = reader;\n                await (0,_utils_api__WEBPACK_IMPORTED_MODULE_1__.readStream)(response, (chunk)=>{\n                    var _options_onChunk;\n                    appendToLastMessage(chunk);\n                    (_options_onChunk = options.onChunk) === null || _options_onChunk === void 0 ? void 0 : _options_onChunk.call(options, chunk);\n                }, (error)=>{\n                    var _options_onError;\n                    setError(error.message);\n                    (_options_onError = options.onError) === null || _options_onError === void 0 ? void 0 : _options_onError.call(options, error);\n                }, ()=>{\n                    var _options_onComplete;\n                    (_options_onComplete = options.onComplete) === null || _options_onComplete === void 0 ? void 0 : _options_onComplete.call(options);\n                });\n            }\n        } catch (error) {\n            var _options_onError;\n            const errorMessage = error instanceof Error ? error.message : \"Unknown error occurred\";\n            setError(errorMessage);\n            updateLastMessage(\"Error: \".concat(errorMessage));\n            (_options_onError = options.onError) === null || _options_onError === void 0 ? void 0 : _options_onError.call(options, error instanceof Error ? error : new Error(errorMessage));\n        } finally{\n            setIsLoading(false);\n            setIsStreaming(false);\n            currentStreamRef.current = null;\n        }\n    }, [\n        addMessage,\n        updateLastMessage,\n        appendToLastMessage,\n        options\n    ]);\n    const analyzePlayerStream = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (request)=>{\n        const userMessage = \"Analyze player: \".concat(request.username);\n        await handleStreamResponse((0,_utils_api__WEBPACK_IMPORTED_MODULE_1__.analyzePlayer)(request), userMessage);\n    }, [\n        handleStreamResponse\n    ]);\n    const analyzePGNStream = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (request)=>{\n        const userMessage = \"Analyze PGN game\";\n        await handleStreamResponse((0,_utils_api__WEBPACK_IMPORTED_MODULE_1__.analyzePGN)(request), userMessage);\n    }, [\n        handleStreamResponse\n    ]);\n    const analyzeRecentGamesStream = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (request)=>{\n        const userMessage = \"Analyze recent games for \".concat(request.username, \" (limit: \").concat(request.num_games || 5, \")\");\n        await handleStreamResponse((0,_utils_api__WEBPACK_IMPORTED_MODULE_1__.analyzeRecentGames)(request), userMessage);\n    }, [\n        handleStreamResponse\n    ]);\n    const uploadPNGFile = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (file, apiKeys)=>{\n        setIsLoading(true);\n        setError(null);\n        // Add user message\n        addMessage({\n            role: \"user\",\n            content: \"Uploaded PNG file: \".concat(file.name),\n            timestamp: Date.now()\n        });\n        // Add initial empty assistant message\n        addMessage({\n            role: \"assistant\",\n            content: \"\",\n            timestamp: Date.now()\n        });\n        try {\n            var _options_onComplete;\n            const result = await (0,_utils_api__WEBPACK_IMPORTED_MODULE_1__.uploadPNG)(file, apiKeys);\n            updateLastMessage(result);\n            (_options_onComplete = options.onComplete) === null || _options_onComplete === void 0 ? void 0 : _options_onComplete.call(options);\n        } catch (error) {\n            var _options_onError;\n            const errorMessage = error instanceof Error ? error.message : \"Unknown error occurred\";\n            setError(errorMessage);\n            updateLastMessage(\"Error: \".concat(errorMessage));\n            (_options_onError = options.onError) === null || _options_onError === void 0 ? void 0 : _options_onError.call(options, error instanceof Error ? error : new Error(errorMessage));\n        } finally{\n            setIsLoading(false);\n        }\n    }, [\n        addMessage,\n        updateLastMessage,\n        options\n    ]);\n    const state = {\n        messages,\n        isLoading,\n        error,\n        isStreaming\n    };\n    return {\n        state,\n        actions: {\n            analyzePlayerStream,\n            analyzePGNStream,\n            analyzeRecentGamesStream,\n            uploadPNGFile,\n            addMessage,\n            updateLastMessage,\n            clearMessages,\n            stopStreaming\n        }\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./hooks/useChatStream.ts\n"));

/***/ })

});